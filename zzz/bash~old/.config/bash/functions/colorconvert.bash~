# hex input: 0x not required, '#abcdef' won't work, as '#' denotes comment
# rgb input: 3 comma separated values: 0,64,128
# termcolor input: 1 value from 0-255
# https://unix.stackexchange.com/a/269085

hex2rgbcolor () {
	local h

	[ -z "$1" ] && return 1

	h=${1#0[Xx]}
	h=${h#\#}

	printf '%d,%d,%d\n' "0x${h:0:2}" "0x${h:2:2}" "0x${h:4:2}"
}

hex2termcolor () {
	local h r g b c

	[ -z "$1" ] && return 1

	h=${1#0[Xx]}
	h=${h#\#}

	r=$(printf '0x%0.2s' "$h")
	g=$(printf '0x%0.2s' "${h:2:2}")
	b=$(printf '0x%0.2s' "${h:4:2}")

	c="$((	(r<75?0:(r-35)/40)*6*6 +
		(g<75?0:(g-35)/40)*6 +
		(b<75?0:(b-35)/40) + 16 ))"

	printf '%03d\n' "$c"
	printf '\e[48;5;%dm   \e[0m\n' "$c"
}

rgb2hexcolor () {
	local i rgb

	[ -z "$1" ] && return 1

	# 1 comma separated argument
	if [ $# -eq 1 ]; then
		IFS=',' read -r -a rgb <<<"$1"
	# 3 space separated arguments
	elif [ $# -eq 3 ]; then
		rgb[0]="$1"
		rgb[1]="$2"
		rgb[2]="$3"
	else
		return 1
	fi

	rgb[0]=$((10#${rgb[0]}))
	rgb[1]=$((10#${rgb[1]}))
	rgb[2]=$((10#${rgb[2]}))

	printf '#'

	for i in {0..2}; do
		printf '%.2x' "${rgb[$i]}"
	done

	echo
}

rgb2termcolor () {
	local rgb r g b c

	[ -z "$1" ] && return 1

	# 1 comma separated argument
	if [ $# -eq 1 ]; then
		IFS=',' read -r -a rgb <<<"$1"
	# 3 space separated arguments
	elif [ $# -eq 3 ]; then
		rgb[0]="$1"
		rgb[1]="$2"
		rgb[2]="$3"
	else
		return 1
	fi

	r=$((10#${rgb[0]}))
	g=$((10#${rgb[1]}))
	b=$((10#${rgb[2]}))

	c="$((	(r<75?0:(r-35)/40)*6*6 +
		(g<75?0:(g-35)/40)*6 +
		(b<75?0:(b-35)/40) + 16 ))"

	printf '%03d\n' "$c"
	printf '\e[48;5;%dm   \e[0m\n' "$c"
}

term2color () {
	local dec bas mul a b c r g gray

	[ -z "$1" ] && return 1

	# input must be a number in range 0-255.
	[ "$1" -lt 0 ] && return 1
	[ "$1" -gt 255 ] && return 1

	dec=$((10#$1))

	if [ "$dec" -lt "16" ]; then
		bas=$(( dec%16 ))
		mul=128

		[ $bas -eq 7 ] && mul=192
		[ $bas -eq 8 ] && bas=7
		[ $bas -gt 8 ] && mul=255

		a="$((  (bas&1)    *mul ))"
		b="$(( ((bas&2)>>1)*mul ))"
		c="$(( ((bas&4)>>2)*mul ))"

		# printf 'dec basic   rgb\n'
		printf '%03s #%02x%02x%02x %d,%d,%d\n' \
			"$dec" "$a" "$b" "$c" "$a" "$b" "$c"
	elif [ "$dec" -gt 15 ] && [ "$dec" -lt 232 ]; then
		b=$(( (dec-16)%6  )); b=$(( b==0?0: b*40 + 55 ))
		g=$(( (dec-16)/6%6)); g=$(( g==0?0: g*40 + 55 ))
		r=$(( (dec-16)/36 )); r=$(( r==0?0: r*40 + 55 ))

		# printf 'dec color   rgb\n'
		printf '%03s #%02x%02x%02x %d,%d,%d\n' \
			"$dec" "$r" "$g" "$b" "$r" "$g" "$b"
	else
		gray=$(( (dec-232)*10+8 ))

		# printf 'dec gray    rgb\n'
		printf '%03s #%02x%02x%02x %d,%d,%d\n' \
			"$dec" "$gray" "$gray" "$gray" "$gray" "$gray" "$gray"
	fi

	printf '\e[48;5;%dm   \e[0m\n' "$dec"
}
